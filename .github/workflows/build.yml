name: Build
on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize ]
  push:
    branches: [ main ]
  schedule:
    # Run a build once per week on the main branch.
    - cron: "0 0 * * 0"

jobs:
  codeql:
    name: Run CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java

      # This can be replaced with a manual build if this begins to fail for any reason.
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  test:
    name: Build (Java ${{ matrix.java-version }} | ${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: 
          - windows-latest
          - ubuntu-latest
          # Sanity check, should be the same as Ubuntu (POSIX file system)
          - macos-latest
        java-version: [ 11, 12, 13, 14, 15, 16, 17, 18, 19 ]
        include:
          - os: windows-latest
            build-script: './mvnw.cmd'
          - os: ubuntu-latest
            build-script: './mvnw'
          - os: macos-latest
            build-script: './mvnw'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Needed to keep actions working correctly.
          fetch-depth: 2

      - name: Initialize JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '${{ matrix.java-version }}'

      - name: Compile and run tests
        run: >-
          ${{ matrix.build-script }} 
          -B 
          -U
          -T8C
          --no-transfer-progress
          '-Dcheckstyle.skip=true'
          '-Dstyle.color=always'
          '-Dmaven.artifact.threads=50'
          clean package

      - name: Annotate test reports with build environment info
        if: always()
        run: >-
          scripts/prepare-test-outputs-for-merge.sh 
          ${{ matrix.java-version }} 
          ${{ matrix.os }}

      - name: Archive Surefire and Jacoco reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: reports-java-${{ matrix.java-version }}-${{ matrix.os }}
          path: |
            **/target/surefire-reports/*.xml
            **/target/surefire-reports/*.txt
            **/target/site/jacoco/jacoco*.xml
          retention-days: 5

  report-test-results:
    name: Report results
    needs: [ test ]
    runs-on: ubuntu-latest
    if: always()
    permissions:
      checks: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Needed to keep actions working correctly.
          fetch-depth: 2

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: 'artifacts/'
          
      - name: Publish to codecov
        continue-on-error: true
        if: always()
        run: |-
          curl --fail https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import # One-time step
          curl --fail -Os https://uploader.codecov.io/latest/linux/codecov
          curl --fail -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl --fail -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
          chmod -v +x codecov
          ./codecov 

      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        continue-on-error: true
        with:
          junit_files: "artifacts/**/TEST-*.xml"

  checkstyle:
    name: Run Checkstyle
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '18'

      - name: Run Checkstyle
        run: >-
          ./mvnw 
          -B 
          -U 
          -T8C
          --no-transfer-progress
          -DskipTests=true
          -Dstyle.color=always
          -Dmaven.artifact.threads=100
          clean package

  javadoc:
    name: Generate JavaDocs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          # We have to use >= 15 for now, as assertj causes JDK 14 and older to prevent linking
          # documentation correctly. I have opened an issue on GitHub with AssertJ to discuss
          # this being generated correctly: https://github.com/assertj/assertj-core/issues/2573.
          java-version: '18'

      - name: Generate JavaDoc documentation
        run: >-
          ./mvnw 
          -B 
          -U 
          -T8C
          --no-transfer-progress
          -Dmaven.test.skip=true
          -Dcheckstyle.skip=true
          -Dstyle.color=always
          -Dmaven.artifact.threads=100
          clean compile javadoc:jar

      - name: Archive JavaDoc artifacts
        uses: actions/upload-artifact@v2
        continue-on-error: true
        if: success()
        with:
          name: javadocs
          path: "**/target/apidocs/io.github.ascopes.jct"
          retention-days: 5
