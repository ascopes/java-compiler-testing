name: Build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_call: {}
  workflow_dispatch: {}

jobs:
  build:
    name: Build on JDK ${{ matrix.java-version }} (${{ matrix.os-name }})
    runs-on: ${{ matrix.os-name }}

    strategy:
      fail-fast: false
      matrix:
        os-name: [ubuntu-latest]
        java-version:
          - 17  # LTS
          - 21  # LTS
          - GA  # General access
        include:
          - os-name: windows-latest
            java-version: GA
          - os-name: macos-latest
            java-version: GA
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Initialize Zulu JDK
        if: matrix.java-version != 'GA'
        uses: actions/setup-java@v4
        with:
          check-latest: true
          distribution: zulu
          java-version: ${{ matrix.java-version }}

      - name: Initialize Oracle JDK
        if: matrix.java-version == 'GA'
        uses: oracle-actions/setup-java@v1
        with:
          website: jdk.java.net
          release: ${{ matrix.java-version }}

      - name: Maven cache
        uses: actions/cache@v4
        env:
          cache-name: maven-cache
        with:
          path:
            ~/.m2
          key: build-${{ env.cache-name }}

      - name: Compile and run tests
        shell: bash
        run: ./mvnw -B -U clean verify

      - name: Upload to codecov
        uses: codecov/codecov-action@v4
        with:
          name: tests-java-${{ matrix.java-version }}-os-${{ matrix.os-name }}
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Stash reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: reports-${{ matrix.java-version }}-${{ matrix.os-name }}
          if-no-files-found: error
          path: |
            **/surefire-reports/**
            **/failsafe-reports/**
            **/build*.log
          retention-days: 30

  notify-coverage:
    name: Notify of coverage
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs:
      - build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Publish code coverage
        uses: codecov/codecov-action@v5
        continue-on-error: true
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          run_command: send-notifications
