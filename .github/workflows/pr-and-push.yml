name: PR and push actions
on:
  pull_request:
    branches: [ "**" ]
    types: [ opened, synchronize ]
  push:
    branches: [ main ]
  schedule:
    # Run a build once per week on the main branch.
    - cron: "0 0 * * 0"

jobs:
  build:
    name: Build - JDK ${{ matrix.java-version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu ]
        java-version:
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          # Mockito currently does not support this distribution.
          # - 20-ea
        build-script: [ './mvnw' ]
        include:
          - os: windows
            build-script: './mvnw.cmd'
            java-version: '11'
          - os: macos
            build-script: './mvnw'
            java-version: '11'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Needed to keep actions working correctly.
          fetch-depth: 2

      - name: Initialize JDK
        uses: actions/setup-java@v3
        with:
          cache: 'maven'
          check-latest: true
          distribution: 'zulu'
          java-version: '${{ matrix.java-version }}'

      - name: Compile and run tests
        run: >-
          ${{ matrix.build-script }} 
          -B 
          -T8
          -U
          --no-transfer-progress
          '-Dcheckstyle.skip=true'
          '-Dlicense.skip=true'
          '-Dstyle.color=always'
          '-Dmaven.wagon.httpconnectionManager.ttlSeconds=120'
          clean verify

      - name: Annotate test reports with build environment info
        if: always()
        run: >-
          scripts/prepare-test-outputs-for-merge.sh 
          ${{ matrix.java-version }} 
          ${{ matrix.os }}

      - name: Archive Surefire and Jacoco reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: reports-java-${{ matrix.java-version }}-${{ matrix.os }}
          path: |
            **/target/surefire-reports/*.xml
            **/target/surefire-reports/*.txt
            **/target/site/jacoco/jacoco*.xml
          retention-days: 5

  report-test-results-and-coverage:
    name: Report test results and coverage
    needs: [ build ]
    runs-on: ubuntu-latest
    if: always()
    permissions:
      checks: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Needed to keep actions working correctly.
          fetch-depth: 2

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: 'artifacts/'

      - name: Publish to codecov
        continue-on-error: true
        if: always()
        run: |-
          curl --fail https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
          curl --fail -Os https://uploader.codecov.io/latest/linux/codecov
          curl --fail -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl --fail -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
          chmod -v +x codecov
          ./codecov 

      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        continue-on-error: true
        with:
          json_test_case_results: true
          json_thousands_separator: ","
          junit_files: "artifacts/**/TEST-*.xml"
          report_individual_runs: true
          time_unit: "milliseconds"

  javadocs:
    name: Generate JavaDocs
    runs-on: ubuntu-latest
    needs: [ report-test-results-and-coverage, compliance ]
    if: github.event_name != 'schedule'

    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          # We have to use >= 15 for now, as assertj causes JDK 14 and older to prevent linking
          # documentation correctly. I have opened an issue on GitHub with AssertJ to discuss
          # this being generated correctly: https://github.com/assertj/assertj-core/issues/2573.
          java-version: '19'
          cache: 'maven'

      - name: Generate JavaDocs
        run: >-
          ./mvnw 
          -B 
          -T8
          -U
          -pl java-compiler-testing
          --also-make
          --no-transfer-progress
          -Dmaven.test.skip=true
          -Dcheckstyle.skip=true
          -Dlicense.skip=true
          -Dstyle.color=always
          -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
          clean compile javadoc:jar

      - name: Upload JavaDocs to GitHub Pages
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/upload-pages-artifact@v1
        with:
          path: java-compiler-testing/target/apidocs

      - name: Deploy JavaDocs to GitHub Pages
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        id: deployment
        uses: actions/deploy-pages@v1

  compliance:
    name: Check Compliance
    runs-on: ubuntu-latest
    needs: [ build ]
    if: ${{ github.event_name != 'schedule' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '19'
          cache: 'maven'

      - name: Run checks
        run: >-
          ./mvnw 
          -B 
          -T8
          -U
          --no-transfer-progress
          -DskipTests=true
          -Dstyle.color=always
          -Dmaven.main.skip
          -Dmaven.jar.skip
          -Dmaven.resources.skip
          -Dmaven.test.skip
          -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
          verify
