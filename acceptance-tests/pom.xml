<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2022 - 2023, the original author or authors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.github.ascopes.jct</groupId>
    <artifactId>java-compiler-testing-parent</artifactId>
    <version>1.1.6-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>acceptance-tests</artifactId>
  <packaging>pom</packaging>

  <name>JCT acceptance test parent project</name>
  <description>Acceptance test components.</description>

  <modules>
    <!-- Custom code proof-of-concept tests -->
    <module>acceptance-tests-serviceloader</module>
    <module>acceptance-tests-serviceloader-jpms</module>

    <!-- Third-party library tests -->
    <module>acceptance-tests-avaje-inject</module>
    <module>acceptance-tests-avaje-jsonb</module>
    <module>acceptance-tests-checkerframework</module>
    <module>acceptance-tests-dagger</module>
    <module>acceptance-tests-google-error-prone</module>
    <module>acceptance-tests-google-auto-factory</module>
    <module>acceptance-tests-google-auto-service</module>
    <module>acceptance-tests-google-auto-value</module>
    <module>acceptance-tests-immutables</module>
    <module>acceptance-tests-lombok</module>
    <module>acceptance-tests-mapstruct</module>
    <module>acceptance-tests-micronaut</module>
    <module>acceptance-tests-spring</module>

    <!-- Dogfood tests -->
    <module>acceptance-tests-dogfood</module>
  </modules>

  <properties>
    <gpg.skip>true</gpg.skip>
    <maven.deploy.skip>true</maven.deploy.skip>
    <maven.install.skip>true</maven.install.skip>
    <maven.jar.skip>true</maven.jar.skip>
    <maven.javadoc.skip>true</maven.javadoc.skip>
    <maven.release.skip>true</maven.release.skip>
    <skip-dependency-scan>true</skip-dependency-scan>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>java-compiler-testing</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
        <type>jar</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <configuration>
            <!--
            Do not complain if we do not have any sources in `src/main` to compile. Some
            acceptancetests just don't use them, and this avoids a spurious warning during builds.
            -->
            <skipIfEmpty>true</skipIfEmpty>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <configuration>
            <failIfNoTests>false</failIfNoTests>
            <!-- Run all tests in failsafe. -->
            <includes>*Test</includes>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>

          <configuration>
            <!-- We run using failsafe in all cases -->
            <skip>true</skip>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
