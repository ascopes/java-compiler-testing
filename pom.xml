<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.github.ascopes</groupId>
  <artifactId>java-compiler-testing</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <inceptionYear>2022</inceptionYear>

  <licenses>
    <license>
      <name>Apache License v2.0</name>
      <url>${scm.url}/blob/${project.scm.tag}/LICENSE.txt</url>
    </license>
  </licenses>

  <scm>
    <url>scm:git:${scm.url}</url>
    <connection>scm:git:${scm.url}</connection>
    <developerConnection>scm:git:${scm.url}</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <aspectj.version>1.9.9</aspectj.version>
    <assertj.version>3.22.0</assertj.version>
    <ecj.version>3.29.0</ecj.version>
    <fuzzywuzzy.version>1.4.0</fuzzywuzzy.version>
    <jimfs.version>1.2</jimfs.version>
    <junit.version>5.8.2</junit.version>
    <reflections.version>0.10.2</reflections.version>
    <slf4j.version>1.7.36</slf4j.version>

    <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-jar-plugin.version>3.2.2</maven-jar-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>

    <!-- Third-party plugins -->
    <jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>

    <!--
      This argument is pulled in by Surefire, and JaCoCo will amend it to ensure the
      coverage agent is installed into the forked JVM running the tests. See
      https://www.eclemma.org/jacoco/trunk/doc/prepare-agent-mojo.html for info.
      We also disable code sharing to prevent some other warnings during test runs.
    -->
    <argLine>-Xshare:off</argLine>

    <!-- Project flags -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <scm.url>https://github.com/ascopes/java-compiler-testing</scm.url>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.google.jimfs</groupId>
      <artifactId>jimfs</artifactId>
      <version>${jimfs.version}</version>
    </dependency>

    <dependency>
      <groupId>me.xdrop</groupId>
      <artifactId>fuzzywuzzy</artifactId>
      <version>${fuzzywuzzy.version}</version>
    </dependency>

    <dependency>
      <!-- AspectJ compiler (optional dependency) -->
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjtools</artifactId>
      <version>${aspectj.version}</version>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
    </dependency>

    <dependency>
      <!-- Eclipse Compiler for Java  -->
      <groupId>org.eclipse.jdt</groupId>
      <artifactId>ecj</artifactId>
      <version>${ecj.version}</version>
    </dependency>

    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>${reflections.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <!-- Testing dependencies -->

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>

        <executions>
          <execution>
            <id>prepare-jacoco-unittest-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report-jacoco-unittest-coverage</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>

        <executions>
          <execution>
            <id>checkstyle</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <configLocation>${project.basedir}/.mvn/checkstyle/checkstyle.xml</configLocation>
              <consoleOutput>true</consoleOutput>
              <encoding>UTF-8</encoding>
              <failsOnError>true</failsOnError>
              <headerLocation>${project.basedir}/.mvn/checkstyle/license-header.txt</headerLocation>
              <sourceDirectories>
                <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
              </sourceDirectories>
              <suppressionsLocation>${project.basedir}/.mvn/checkstyle/suppressions.xml</suppressionsLocation>
              <violationSeverity>info</violationSeverity>
            </configuration>
          </execution>

          <execution>
            <!-- Disable default phase. -->
            <id>default</id>
            <phase>verify</phase>
            <goals/>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>

        <configuration>
          <showDeprecation>true</showDeprecation>
          <release>11</release>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>

        <configuration>
          <archive>
            <manifest>
              <addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
            <manifestEntries>
              <Sealed>true</Sealed>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>

        <configuration>

          <!--
            This block is needed to show @DisplayName and @ParameterizedTest
            in reports with the provided names.
          -->
          <statelessTestsetReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
            <disable>false</disable>
            <version>3.0</version>
            <usePhrasedFileName>false</usePhrasedFileName>
            <usePhrasedTestSuiteClassName>true</usePhrasedTestSuiteClassName>
            <usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
            <usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
          </statelessTestsetReporter>
          <consoleOutputReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5ConsoleOutputReporter">
            <disable>false</disable>
            <encoding>UTF-8</encoding>
            <usePhrasedFileName>false</usePhrasedFileName>
          </consoleOutputReporter>
          <statelessTestsetInfoReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoReporter">
            <disable>false</disable>
            <usePhrasedFileName>false</usePhrasedFileName>
            <usePhrasedClassNameInRunning>true</usePhrasedClassNameInRunning>
            <usePhrasedClassNameInTestCaseSummary>true</usePhrasedClassNameInTestCaseSummary>
          </statelessTestsetInfoReporter>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>