<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.ascopes.jct</groupId>
  <artifactId>java-compiler-testing-parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <modules>
    <module>java-compiler-testing</module>
    <module>examples</module>
  </modules>

  <inceptionYear>2022</inceptionYear>

  <contributors>
    <contributor>
      <name>Ashley Scopes</name>
      <url>${project.organization.url}</url>
    </contributor>
  </contributors>

  <licenses>
    <license>
      <name>Apache License v2.0</name>
      <url>${project.scm-url}/blob/main/LICENSE.txt</url>
    </license>
  </licenses>

  <organization>
    <name>Ashley Scopes (GitHub)</name>
    <url>${project.organization.url}</url>
  </organization>

  <scm>
    <url>scm:git:${project.scm-url}</url>
    <connection>scm:git:${project.scm-url}</connection>
    <developerConnection>scm:git:${project.scm-url}</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <properties>

    <!-- Dependencies -->
    <apiguardian.version>1.1.2</apiguardian.version>
    <assertj.version>3.23.1</assertj.version>
    <awaitility.version>4.2.0</awaitility.version>
    <ecj.version>3.30.0</ecj.version>
    <jimfs.version>1.2</jimfs.version>
    <jsr305.version>3.0.2</jsr305.version>
    <junit.version>5.9.0</junit.version>
    <lombok.version>1.18.24</lombok.version>
    <mockito.version>4.8.0</mockito.version>
    <reflections.version>0.10.2</reflections.version>
    <slf4j.version>2.0.0</slf4j.version>

    <!-- Plugins -->
    <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
    <maven-checkstyle-plugin.version>3.2.0</maven-checkstyle-plugin.version>
    <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
    <maven-jar-plugin.version>3.2.2</maven-jar-plugin.version>
    <maven-javadoc-plugin.version>3.4.1</maven-javadoc-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M7</maven-surefire-plugin.version>

    <!-- Plugin dependencies -->
    <checkstyle.version>10.3.3</checkstyle.version>
    <maven-surefire-junit5-tree-reporter.version>1.1.0</maven-surefire-junit5-tree-reporter.version>

    <!-- Log verbosity -->
    <hide-test-logs-in-console>true</hide-test-logs-in-console>

    <!--
      This argument is pulled in by Surefire, and JaCoCo will amend it to ensure the
      coverage agent is installed into the forked JVM running the tests. See
      https://www.eclemma.org/jacoco/trunk/doc/prepare-agent-mojo.html for info.

      We also disable code sharing to prevent some other warnings during test runs, and
      force the SLF4J simple logger defaults to use in tests here.
    -->
    <argLine>
      -Dorg.slf4j.simpleLogger.log=INFO
      -Dorg.slf4j.simpleLogger.log.io.github.ascopes.jct=DEBUG
      -Xshare:off
    </argLine>
    <java-release.version>11</java-release.version>

    <!-- Project flags -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <project.organization.url>https://github.com/ascopes</project.organization.url>
    <project.scm-url>${project.organization.url}/jct</project.scm-url>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>${jsr305.version}</version>
      </dependency>

      <dependency>
        <!-- In-memory file system -->
        <groupId>com.google.jimfs</groupId>
        <artifactId>jimfs</artifactId>
        <version>${jimfs.version}</version>
      </dependency>

      <dependency>
        <!-- API versioning annotations -->
        <groupId>org.apiguardian</groupId>
        <artifactId>apiguardian-api</artifactId>
        <version>${apiguardian.version}</version>
      </dependency>

      <dependency>
        <!-- Fluent assertions -->
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
      </dependency>

      <dependency>
        <!-- Awaitable assertions -->
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${awaitility.version}</version>
      </dependency>

      <dependency>
        <!-- Eclipse Compiler for Java  -->
        <groupId>org.eclipse.jdt</groupId>
        <artifactId>ecj</artifactId>
        <version>${ecj.version}</version>
      </dependency>

      <dependency>
        <!-- Unit testing -->
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <!-- Mocking -->
        <groupId>org.mockito</groupId>
        <artifactId>mockito-bom</artifactId>
        <version>${mockito.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <!--
          Used within one of the example modules to prove compatibility with third-party
          annotation processors.
        -->
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
      </dependency>

      <dependency>
        <!-- Common reflection facilities -->
        <groupId>org.reflections</groupId>
        <artifactId>reflections</artifactId>
        <version>${reflections.version}</version>
      </dependency>

      <dependency>
        <!-- Logging interface -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <!-- Logging implementation for tests -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <!-- Coverage tracing -->
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>

          <executions>
            <execution>
              <id>add-coverage-agent-to-surefire-args</id>
              <phase>initialize</phase>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>

            <execution>
              <id>report-coverage</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <!-- Checking style of code matches the Google code style -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven-checkstyle-plugin.version}</version>

          <executions>
            <execution>
              <id>checkstyle</id>
              <phase>compile</phase>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <configLocation>
                  <!--suppress UnresolvedMavenProperty -->
                  ${maven.multiModuleProjectDirectory}/.mvn/checkstyle/checkstyle.xml
                </configLocation>
                <consoleOutput>true</consoleOutput>
                <encoding>UTF-8</encoding>
                <failsOnError>true</failsOnError>
                <!--suppress UnresolvedMavenProperty -->
                <headerLocation>
                  ${maven.multiModuleProjectDirectory}/.mvn/checkstyle/license-header.txt
                </headerLocation>
                <includeResources>true</includeResources>
                <sourceDirectories>${project.basedir}/src</sourceDirectories>
                <suppressionsLocation>
                  <!--suppress UnresolvedMavenProperty -->
                  ${maven.multiModuleProjectDirectory}/.mvn/checkstyle/suppressions.xml
                </suppressionsLocation>
                <violationSeverity>info</violationSeverity>
              </configuration>
            </execution>
          </executions>

          <dependencies>
            <dependency>
              <!-- Force the usage of checkstyle v10 rather than v8.28 -->
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <!-- Java compiler config -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>

          <configuration>
            <failOnWarning>true</failOnWarning>
            <showDeprecation>true</showDeprecation>
            <release>${java-release.version}</release>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>

          <configuration>
            <archive>
              <index>true</index>
              <manifest>
                <addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addExtensions>true</addExtensions>
              </manifest>
              <manifestEntries>
                <Sealed>true</Sealed>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>

          <configuration>
            <additionalOptions>
              <option>--override-methods=detail</option>
              <option>-version</option>
            </additionalOptions>
            <source>${java-release.version}</source>
            <links>
              <link>https://javadoc.io/doc/com.google.jimfs/jimfs/${jimfs.version}</link>
              <link>https://javadoc.io/doc/org.assertj/assertj-core/${assertj.version}</link>
            </links>
          </configuration>
        </plugin>

        <plugin>
          <!-- Unit testing config -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>

          <configuration>
            <!--
              This block is needed to show @DisplayName and @ParameterizedTest
              in reports with the provided names.
            -->
            <statelessTestsetReporter
              implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
              <disable>false</disable>
              <version>3.0</version>
              <usePhrasedFileName>false</usePhrasedFileName>
              <usePhrasedTestSuiteClassName>true</usePhrasedTestSuiteClassName>
              <usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
              <usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
            </statelessTestsetReporter>
            <consoleOutputReporter>
              <disable>${hide-test-logs-in-console}</disable>
            </consoleOutputReporter>
            <statelessTestsetInfoReporter
              implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoTreeReporter">
              <disable>false</disable>
              <usePhrasedFileName>false</usePhrasedFileName>
              <usePhrasedClassNameInRunning>true</usePhrasedClassNameInRunning>
              <usePhrasedClassNameInTestCaseSummary>true</usePhrasedClassNameInTestCaseSummary>
            </statelessTestsetInfoReporter>
          </configuration>

          <dependencies>
            <dependency>
              <groupId>me.fabriciorby</groupId>
              <artifactId>maven-surefire-junit5-tree-reporter</artifactId>
              <version>${maven-surefire-junit5-tree-reporter.version}</version>
            </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>show-test-logs-in-console</id>
      <properties>
        <hide-test-logs-in-console>false</hide-test-logs-in-console>
      </properties>
    </profile>
  </profiles>
</project>
