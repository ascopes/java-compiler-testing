<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.github.ascopes</groupId>
  <artifactId>java-compiler-testing-parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <modules>
    <module>java-compiler-testing</module>
  </modules>

  <inceptionYear>2022</inceptionYear>

  <licenses>
    <license>
      <name>Apache License v2.0</name>
      <url>${project.scm-url}/blob/main/LICENSE.txt</url>
    </license>
  </licenses>

  <scm>
    <url>scm:git:${project.scm-url}</url>
    <connection>scm:git:${project.scm-url}</connection>
    <developerConnection>scm:git:${project.scm-url}</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <assertj.version>3.22.0</assertj.version>
    <awaitility.version>4.2.0</awaitility.version>
    <ecj.version>3.29.0</ecj.version>
    <fuzzywuzzy.version>1.4.0</fuzzywuzzy.version>
    <jimfs.version>1.2</jimfs.version>
    <junit-jupiter.version>5.8.2</junit-jupiter.version>
    <mockito.version>4.4.0</mockito.version>
    <reflections.version>0.10.2</reflections.version>
    <slf4j.version>1.7.36</slf4j.version>

    <!-- Maven plugins and depencencies -->
    <checkstyle.version>10.0</checkstyle.version>
    <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-jar-plugin.version>3.2.2</maven-jar-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>

    <!-- Third-party plugins -->
    <jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>

    <!--
      This argument is pulled in by Surefire, and JaCoCo will amend it to ensure the
      coverage agent is installed into the forked JVM running the tests. See
      https://www.eclemma.org/jacoco/trunk/doc/prepare-agent-mojo.html for info.
      We also disable code sharing to prevent some other warnings during test runs.
    -->
    <argLine>-Xshare:off</argLine>

    <!-- Project flags -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.scm-url>https://github.com/ascopes/java-compiler-testing</project.scm-url>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <!-- In-memory file system -->
        <groupId>com.google.jimfs</groupId>
        <artifactId>jimfs</artifactId>
        <version>${jimfs.version}</version>
      </dependency>

      <dependency>
        <!-- Levenshtein Distance algorithm for matching similar strings -->
        <groupId>me.xdrop</groupId>
        <artifactId>fuzzywuzzy</artifactId>
        <version>${fuzzywuzzy.version}</version>
      </dependency>

      <dependency>
        <!-- Fluent assertions -->
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
      </dependency>

      <dependency>
        <!-- Awaitable assertions -->
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${awaitility.version}</version>
      </dependency>

      <dependency>
        <!-- Eclipse Compiler for Java  -->
        <groupId>org.eclipse.jdt</groupId>
        <artifactId>ecj</artifactId>
        <version>${ecj.version}</version>
      </dependency>

      <dependency>
        <!-- Unit testing -->
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit-jupiter.version}</version>
      </dependency>

      <dependency>
        <!-- Mocking -->
        <groupId>org.mockito</groupId>
        <artifactId>mockito-inline</artifactId>
        <version>${mockito.version}</version>
      </dependency>

      <dependency>
        <!-- Common reflection facilities -->
        <groupId>org.reflections</groupId>
        <artifactId>reflections</artifactId>
        <version>${reflections.version}</version>
      </dependency>

      <dependency>
        <!-- Logging interface -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <!-- Logging interface implementation -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <!-- Coverage tracing -->
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>

          <executions>
            <execution>
              <id>prepare-jacoco-unittest-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report-jacoco-unittest-coverage</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <!-- Java compiler config -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>

          <configuration>
            <showDeprecation>true</showDeprecation>
            <release>11</release>
          </configuration>
        </plugin>

        <plugin>
          <!-- JAR config -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>

          <configuration>
            <archive>
              <manifest>
                <addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
              <manifestEntries>
                <Sealed>true</Sealed>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <!-- Unit testing config -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>

          <configuration>

            <!--
              This block is needed to show @DisplayName and @ParameterizedTest
              in reports with the provided names.
            -->
            <statelessTestsetReporter
              implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
              <disable>false</disable>
              <version>3.0</version>
              <usePhrasedFileName>false</usePhrasedFileName>
              <usePhrasedTestSuiteClassName>true</usePhrasedTestSuiteClassName>
              <usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
              <usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
            </statelessTestsetReporter>
            <consoleOutputReporter
              implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5ConsoleOutputReporter">
              <disable>false</disable>
              <encoding>UTF-8</encoding>
              <usePhrasedFileName>false</usePhrasedFileName>
            </consoleOutputReporter>
            <statelessTestsetInfoReporter
              implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoReporter">
              <disable>false</disable>
              <usePhrasedFileName>false</usePhrasedFileName>
              <usePhrasedClassNameInRunning>true</usePhrasedClassNameInRunning>
              <usePhrasedClassNameInTestCaseSummary>true</usePhrasedClassNameInTestCaseSummary>
            </statelessTestsetInfoReporter>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <!-- Checking style of code matches the Google code style -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>

        <executions>
          <execution>
            <id>checkstyle</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <configLocation>
                <!--suppress UnresolvedMavenProperty -->
                ${maven.multiModuleProjectDirectory}/.mvn/checkstyle/checkstyle.xml
              </configLocation>
              <consoleOutput>true</consoleOutput>
              <encoding>UTF-8</encoding>
              <failsOnError>true</failsOnError>
              <!--suppress UnresolvedMavenProperty -->
              <headerLocation>
                ${maven.multiModuleProjectDirectory}/.mvn/checkstyle/license-header.txt
              </headerLocation>
              <includeResources>true</includeResources>
              <sourceDirectories>${project.basedir}/src</sourceDirectories>
              <suppressionsLocation>
                <!--suppress UnresolvedMavenProperty -->
                ${maven.multiModuleProjectDirectory}/.mvn/checkstyle/suppressions.xml
              </suppressionsLocation>
              <violationSeverity>info</violationSeverity>
            </configuration>
          </execution>
        </executions>

        <dependencies>
          <dependency>
            <!-- Force the usage of checkstyle v10 rather than v8.28 -->
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.version}</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>
